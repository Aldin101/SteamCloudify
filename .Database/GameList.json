{
  "games": [
    {
      "name": "Beat Saber",
      "steamID": "620980",
      "installer": {
        "Script": ""
      },
      "isOnline": true
    },
    {
      "name": "BONEWORKS",
      "steamID": "823500",
      "installer": {
        "Script": "IyAudGVtcGxhdGVzXHVuaXR5ICMgR2FtZSBzcGVjaWZpYyBzdGFydC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gJGdhbWVOYW1lID0gIkJPTkVXT1JLUyIgIyBuYW1lIG9mIHRoZSBnYW1lICRzdGVhbUFwcElEID0gIjgyMzUwMCIgIyB5b3UgY2FuIGZpbmQgdGhpcyBvbiBodHRwczovL3N0ZWFtZGIuaW5mbywgaXQgc2hvdWxkIGJlIHN0cnVjdHVyZWQgbGlrZSB0aGlzLCAiTlVNQkVSIiAkZ2FtZUV4ZWN1dGFibGVOYW1lID0gIkJPTkVXT1JLUy5leGUiICMgZXhlY3V0YWJsZSBuYW1lIHNob3VsZCBiZSBzdHJ1Y3R1cmVkLCAiR0FNRSBOQU1FLmV4ZSIgJGdhbWVGb2xkZXJOYW1lID0gIkJPTkVXT1JLUyIgIyBpbnN0YWxsIGZvbGRlciBzaG91bGQgYmUgc3RydWN0dXJlZCBsaWtlIHRoaXMsICJHQU1FIEZPTERFUiBOQU1FIiBqdXN0IGdpdmUgdGhlIGZvbGRlciBuYW1lICRnYW1lU2F2ZUZvbGRlciA9ICJDOlxVc2Vyc1wkZW52OnVzZXJuYW1lXEFwcERhdGFcTG9jYWxMb3dcU3RyZXNzIExldmVsIFplcm9cQk9ORVdPUktTIiAjIHRoZSBmb2xkZXIgd2hlcmUgc2F2ZXMgYXJlIGxvY2F0ZWQsIGlmIHRoZSBnYW1lIGRvZXMgbm90IHN0b3JlIHNhdmUgZmlsZXMgaW4gYSBmb2xkZXIgY29tbWVudCB0aGlzIG91dC0gIyAtSWYgdGhlIGdhbWUgZG9lcyBpdCBzaG91bGQgYmUgc3RydWN0dXJlZCBsaWtlIHRoaXMgIkZ1bGxcRm9sZGVyXFBhdGgiLiBNYWtlIHN1cmUgbm90IHRvIGluY2x1ZGUgdXNlci9jb21wdXRlciBzcGVjaWZpYyBpbmZvcm1hdGlvbiBhbmQgdXNlLSAjIC1lbnZpcm9ubWVudCB2YXJpYWJsZXMgaW5zdGVhZC4gTW9zdCBVbml0eSBnYW1lcyBzdG9yZSBmaWxlcyBhdCAiJGVudjphcHBkYXRhXC4uXExvY2FsTG93XFtDT01QQU5ZIE5BTUVdXFtHQU1FIE5BTUVdIiAjIElmIHlvdSBkbyBub3Qga25vdyB3aGVyZSBzYXZlIGZpbGVzIGFyZSB1c2Ugb3B0aW9uIDUgaW4gdGhlIGJ1aWxkIHRvb2wgKG9wZW4gQnVpbGQucHMxIGFuZCBwcmVzcyB0aGUgcGxheSBidXR0b24gaW4gdGhlIHRvcCByaWdodCBjb3JuZXIpICRnYW1lU2F2ZUV4dGVuc2lvbnMgPSAiLmRhdCIgIyB0aGUgZ2FtZSBzYXZlIGZvbGRlciBzb21ldGltZXMgY29udGFpbnMgaW5mb3JtYXRpb24gb3RoZXIgdGhhbiBqdXN0IGdhbWUgc2F2ZXMsIGFuZCBzb21lLSAjIC1maWxlcyBzaG91bGQgbm90IGJlIHVwbG9hZGVkIHRvIFN0ZWFtIENsb3VkLiBJZiB0aGVyZSBpcyBvbmUgZXh0ZW5zaW9uIGZvcm1hdCBpdCBsaWtlIHRoaXMgIi5bRVhURU5TSU9OXSIuIElmIHRoZXJlIGFyZSBtb3JlIHRoYXQgb25lIGZvcm1hdCBpdCBsaWtlIHRoaXMgIyAiW0VYVEVOU0lPTjFdIiwgIltFWFRFTlNJT04yXSIsICJbRVhURU5TSU9OM10iICMgJGdhbWVSZWdpc3RyeUVudHJpZXMgPSAiW0lOU0VSVCBSRUdJU1RSWSBMT0NBVElPTl0iICMgdGhlIGxvY2F0aW9uIHdoZXJlIHJlZ2lzdHJ5IGVudHJpZXMgYXJlIGxvY2F0ZWQsIGlmIHRoZSBnYW1lIGRvZXMgbm90IHN0b3JlIHNhdmUgZmlsZXMgaW4gdGhlIHJlZ2lzdHJ5LSAjIC0gY29tbWVudCB0aGlzIG91dCBieSBzaW1wbHkgcHV0dGluZyBhICIjIiBiZWZvcmUgdGhlICIkIi4gSWYgdGhlIGdhbWUgZG9lcyBpdCBzaG91bGQgYmUgc3RydWN0dXJlZCBsaWtlIHRoaXMgIkhLQ1VcU09GVFdBUkVcW0NPTVBBTlkgTkFNRV1cW0dBTUUgTkFNRV0iLiAkZGF0YWJhc2VVUkwgPSAiW0RBVEFCQVNFIFVSTF0iICMgVGhlIFVSTCB3aGVyZSB0aGUgaW5zdGFsbGVyIGRhdGFiYXNlIGNhbiBiZSBmb3VuZCBzbyB0aGF0IHRoaXMgaW5zdGFsbGVyIGtub3dzIHdoZXJlIHRvIGRvd25sb2FkIHRoZSBjbG91ZCBzeW5jIHV0aWwgYW5kIGJhY2tncm91bmQgdGFzayAkdXBkYXRlTGluayA9ICJbVVJMIEZPUiBHQU1FIExBVU5DSCBUQVNLXSIgIyBUaGUgVVJMIHdoZXJlIHRoZSBsYXVuY2ggZXhlY3V0YWJsZSBjYW4gYmUgZm91bmQgc28gdGhhdCB0aGlzIGJhY2tncm91bmQgdGFzayBrbm93cyB3aGVyZSB0byBkb3dubG9hZCB0aGUgbGF1bmNoIHRhc2sgZnJvbS4gVGhpcyBsaW5rIGlzIG5vdCB1c2VkIGJ5IHRoaXMtICMgaW5zdGFsbGVyIGFzIGFsbCB0aGUgcmVxdWlyZWQgZmlsZXMgYXJlIGJ1bmRsZWQuIFRoaXMgaXMgdXNlZCBieSB0aGUgYmFja2dyb3VuZCB0YXNrIHRvIGRvd25sb2FkIHRoZSBsYXVuY2ggdGFzayB3aGVuIHRoZSBnYW1lIHVwZGF0ZXMuICMgR2FtZSBzcGVjaWZpYyBlbmQtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gICRjbG91ZE5hbWUgPSAiJGdhbWVOYW1lIFN0ZWFtIENsb3VkIiAkZmlsZSA9IEludm9rZS1XZWJSZXF1ZXN0ICIkZGF0YWJhc2VVUkwiIC1Vc2VCYXNpY1BhcnNpbmcgJGRhdGFiYXNlID0gJGZpbGUuQ29udGVudCB8IENvbnZlcnRGcm9tLUpzb24gZnVuY3Rpb24gRm9ybWF0LUpzb24oW1BhcmFtZXRlcihNYW5kYXRvcnksIFZhbHVlRnJvbVBpcGVsaW5lKV1bU3RyaW5nXSAkanNvbikgeyAgICAgJGluZGVudCA9IDA7ICAgICAoJGpzb24gLVNwbGl0ICdcbicgfCAgICAgICAlIHsgICAgICAgICBpZiAoJF8gLW1hdGNoICdbXH1cXV0nKSB7ICAgICAgICAgICAkaW5kZW50LS0gICAgICAgICB9ICAgICAgICAgJGxpbmUgPSAoJyAnICogJGluZGVudCAqIDIpICsgJF8uVHJpbVN0YXJ0KCkuUmVwbGFjZSgnOiAgJywgJzogJykgICAgICAgICBpZiAoJF8gLW1hdGNoICdbXHtcW10nKSB7ICAgICAgICAgICAkaW5kZW50KysgICAgICAgICB9ICAgICAgICAgJGxpbmUgICAgIH0pIC1Kb2luICJgbiIgfSAgIGlmICh0ZXN0LXBhdGggIiRlbnY6YXBwZGF0YVwkY2xvdWROYW1lXENsb3VkQ29uZmlnLmpzb24iKSB7ICAgICAkZGlzYWJsZUNob2ljZSA9IFJlYWQtSG9zdCAiU3RlYW0gQ2xvdWQgaXMgYWxyZWFkeSBlbmFibGVkIGZvciB0aGlzIGdhbWUuIFdvdWxkIHlvdSBsaWtlIHRvIGRpc2FibGUgU3RlYW0gQ2xvdWQgW3kvbl0iICAgICBpZiAoJGRpc2FibGVDaG9pY2UgLW5lICJuIiAtYW5kICRkaXNhYmxlQ2hvaWNlIC1uZSAiTiIgLWFuZCAkZGlzYWJsZUNob2ljZSAtbmUgIm5vIikgeyAgICAgICAgIGVjaG8gIkRpc2FibGluZyBjbG91ZCBzeW5jIG9uIHRoaXMgY29tcHV0ZXIuLi4iICAgICAgICAgJENsb3VkQ29uZmlnID0gR2V0LUNvbnRlbnQgIiRlbnY6YXBwZGF0YVwkY2xvdWROYW1lXENsb3VkQ29uZmlnLmpzb24iIHwgQ29udmVydEZyb20tSnNvbiAgICAgICAgIGNkICRDbG91ZENvbmZpZy5nYW1lcGF0aCAgICAgICAgIFJlbW92ZS1JdGVtICIuXCQoJGdhbWVFeGVjdXRhYmxlTmFtZS5UcmltRW5kKCIuZXhlIikpIEdhbWVfRGF0YSIgLVJlY3Vyc2UgICAgICAgICBSZW1vdmUtSXRlbSAiLlwkZ2FtZUV4ZWN1dGFibGVOYW1lIiAgICAgICAgIFJlbmFtZS1JdGVtICIuXCQoJGdhbWVFeGVjdXRhYmxlTmFtZS5UcmltRW5kKCIuZXhlIikpIEdhbWUuZXhlIiAiJGdhbWVFeGVjdXRhYmxlTmFtZSIgICAgICAgICB0YXNra2lsbCAvZiAvaW0gIiRjbG91ZE5hbWUuZXhlIiAyPiRudWxsIHwgT3V0LU51bGwgICAgICAgICBSZW1vdmUtSXRlbSAiJGVudjphcHBkYXRhXE1pY3Jvc29mdFxXaW5kb3dzXFN0YXJ0IE1lbnVcUHJvZ3JhbXNcU3RhcnR1cFwkY2xvdWROYW1lLmV4ZSIgICAgICAgICBSZW1vdmUtSXRlbSAiJGVudjphcHBkYXRhXCRjbG91ZE5hbWVcQ2xvdWRDb25maWcuanNvbiIgICAgICAgICBlY2hvICJGaW5pc2hlZCwgcHJlc3MgYW55IGtleSB0byBleGl0IiAgICAgICAgIHRpbWVvdXQgLTEgfCBPdXQtTnVsbCAgICAgICAgIGV4aXQgICAgIH0gZWxzZSB7ICAgICAgICAgZWNobyAiUHJlc3MgYW55IGtleSB0byBleGl0IiAgICAgICAgIHRpbWVvdXQgLTEgfCBPdXQtTnVsbCAgICAgICAgIGV4aXQgICAgIH0gfSAgZWNobyAiU2V0dGluZyB1cCBTdGVhbSBDbG91ZC4uLiIgJHN0ZWFtUGF0aCA9IChHZXQtSXRlbVByb3BlcnR5IC1wYXRoICdIS0NVOlxTT0ZUV0FSRVxWYWx2ZVxTdGVhbScpLnN0ZWFtUGF0aCAkaT0wIGlmICh0ZXN0LXBhdGggIiRzdGVhbVBhdGhcc3RlYW1hcHBzXGNvbW1vblwkZ2FtZUZvbGRlck5hbWVcIikgeyAgICAgJGdhbWVwYXRoID0gIiRzdGVhbVBhdGhcc3RlYW1hcHBzXGNvbW1vblwkZ2FtZUZvbGRlck5hbWVcIiB9IGVsc2UgeyAgICAgZXhwbG9yZXIuZXhlICJzdGVhbTovL2xhdW5jaC8kc3RlYW1BcHBJRCIgICAgIHdoaWxlICgkZ2FtZXBhdGggLWVxICRudWxsIC1hbmQgJGkgLWx0IDUpIHsgICAgICAgICAkZ2FtZXBhdGggPSBHZXQtQ2ltSW5zdGFuY2UgV2luMzJfUHJvY2VzcyAtRmlsdGVyICJuYW1lID0gJyRnYW1lRXhlY3V0YWJsZU5hbWUnIiAtRXJyb3JBY3Rpb24gU2lsZW50bHlDb250aW51ZSAgICAgICAgICsrJGkgICAgICAgICB0aW1lb3V0LmV4ZSAvdCAxIC9ub2JyZWFrIHwgT3V0LU51bGwgICAgIH0gICAgIGlmICgkZ2FtZXBhdGggLWVxICRudWxsKSB7ICAgICAgICAgZWNobyAiVW5hYmxlIHRvIGdldCBnYW1lIGluc3RhbGwgbG9jYXRpb24sIHBsZWFzZSBtYWtlIHN1cmUgdGhhdCBTdGVhbSBpcyBydW5uaW5nIGFuZCB0cnkgYWdhaW4iICAgICAgICAgZWNobyAiUHJlc3MgYW55IGtleSB0byBleGl0IiAgICAgICAgIHRpbWVvdXQgLTEgfCBPdXQtTnVsbCAgICAgICAgIGV4aXQgICAgIH0gICAgICRnYW1lcGF0aCA9ICRnYW1lcGF0aC5Db21tYW5kTGluZSAtcmVwbGFjZSAnIicsICIiICAgICAkZ2FtZXBhdGggPSAkZ2FtZXBhdGguVHJpbUVuZCgkZ2FtZUV4ZWN1dGFibGVOYW1lKSAgICAgdGFza2tpbGwgL2YgL2ltICRnYW1lRXhlY3V0YWJsZU5hbWUgMj4kbnVsbCB8IE91dC1OdWxsIH0gIGNkICRnYW1lcGF0aCBpZiAoVGVzdC1QYXRoICIkc3RlYW1QYXRoXHN0ZWFtYXBwc1xjb21tb25cU3RlYW0gQ29udHJvbGxlciBDb25maWdzXCRzdGVhbWlkXGNvbmZpZ1wkc3RlYW1BcHBJRFxpc0NvbmZpZ3VyZWQudmRmIikgeyAgICAgd2hpbGUgKCRjaG9pY2UgLWVxICRudWxsKSB7ICAgICAgICAgZWNobyAiU3RlYW0gQ2xvdWQgaGFzIGFscmVhZHkgYmVlbiBzZXR1cCBvbiBhbm90aGVyIGNvbXB1dGVyLCBhbmQgc2F2ZXMgZm9yIHRoYXQgY29tcHV0ZXIgYXJlIGFscmVhZHkgaW4gU3RlYW0gQ2xvdWQiICAgICAgICAgZWNobyAiWzFdIE92ZXJyaWRlIHlvdXIgU3RlYW0gQ2xvdWQgc2F2ZXMgd2l0aCB0aGUgb25lcyBvbiB0aGlzIGNvbXB1dGVyIiAgICAgICAgIGVjaG8gIlsyXSBPdmVycmlkZSB5b3VyIHNhdmVzIG9uIHRoaXMgY29tcHV0ZXIgd2l0aCB0aGUgb25lcyBpbiBTdGVhbSBDbG91ZCIgICAgICAgICBlY2hvICJbM10gQ2FuY2VsIGluc3RhbGxhdGlvbiIgICAgICAgICAkY2hvaWNlID0gUmVhZC1Ib3N0ICJXaGF0IHdvdWxkIHlvdSBsaWtlIHRvIGRvIiAgICAgICAgIGlmICgkY2hvaWNlIC1lcSAxKSB7ICAgICAgICAgICAgIGRlbCAiJHN0ZWFtUGF0aFxzdGVhbWFwcHNcY29tbW9uXFN0ZWFtIENvbnRyb2xsZXIgQ29uZmlnc1wkc3RlYW1pZFxjb25maWdcJHN0ZWFtQXBwSURcIiAtUmVjdXJzZSAgICAgICAgICAgICBlY2hvICJTZXR0aW5nIHVwIFN0ZWFtIENsb3VkLi4uIiAgICAgICAgICAgICBicmVhayAgICAgICAgIH0gICAgICAgICBpZiAoJGNob2ljZSAtZXEgMikgeyAgICAgICAgICAgICBlY2hvICJTZXR0aW5nIHVwIFN0ZWFtIENsb3VkLi4uIiAgICAgICAgICAgICBicmVhayAgICAgICAgIH0gICAgICAgICBpZiAoJGNob2ljZSAtZXEgMykgeyAgICAgICAgICAgICBlY2hvICJJbnN0YWxsYXRpb24gY2FuY2xlZCIgICAgICAgICAgICAgZWNobyAiUHJlc3MgYW55IGtleSB0byBleGl0IiAgICAgICAgICAgICB0aW1lb3V0IC0xIHwgT3V0LU51bGwgICAgICAgICAgICAgZXhpdCAgICAgICAgIH0gICAgICAgICBlY2hvICJUaGF0IGlzIG5vdCBhIHZhbGlkIG9wdGlvbiIgICAgICAgICB0aW1lb3V0IC0xICAgICAgICAgJGNob2ljZSA9ICRudWxsICAgICAgICAgY2xzICAgICAgICAgZWNobyAiU2V0dGluZyB1cCBTdGVhbSBDbG91ZC4uLiIgICAgIH0gfSBlbHNlIHsgICAgICRjaG9pY2UgPSAxIH0gbWtkaXIgIiRlbnY6YXBwZGF0YVwkZ2FtZW5hbWUgU3RlYW0gQ2xvdWRcIiB8IG91dC1udWxsIFJlbmFtZS1JdGVtICIuXCRnYW1lRXhlY3V0YWJsZU5hbWUiICIkKCRnYW1lRXhlY3V0YWJsZU5hbWUuVHJpbUVuZCgiLmV4ZSIpKSBHYW1lLmV4ZSIgQ29weS1JdGVtICIuXCQoJGdhbWVFeGVjdXRhYmxlTmFtZS5UcmltRW5kKCIuZXhlIikpX0RhdGEiICIuXCQoJGdhbWVFeGVjdXRhYmxlTmFtZS5UcmltRW5kKCIuZXhlIikpIEdhbWVfRGF0YSIgLVJlY3Vyc2UgbWtkaXIgIiRzdGVhbVBhdGhcc3RlYW1hcHBzXGNvbW1vblxTdGVhbSBDb250cm9sbGVyIENvbmZpZ3NcJHN0ZWFtaWRcY29uZmlnXCRzdGVhbUFwcElEIiBJbnZva2UtV2ViUmVxdWVzdCAkZGF0YWJhc2UudXBkYXRlTGluayAtT3V0RmlsZSAiLlwkZ2FtZUV4ZWN1dGFibGVOYW1lIiAgSW52b2tlLVdlYlJlcXVlc3QgJGRhdGFiYXNlLmdhbWVVcGRhdGVDaGVja2VyIC1PdXRGaWxlICIkZW52OmFwcGRhdGFcTWljcm9zb2Z0XFdpbmRvd3NcU3RhcnQgTWVudVxQcm9ncmFtc1xTdGFydHVwXCRjbG91ZE5hbWUuZXhlIiBpZiAoJGNob2ljZSAtZXEgMSkgeyAgICAgaWYgKCRnYW1lU2F2ZUZvbGRlciAtbmUgJG51bGwpIHsgICAgICAgICAkZmlsZXMgPSBHZXQtQ2hpbGRJdGVtIC1QYXRoICIkZ2FtZVNhdmVGb2xkZXIiIC1JbmNsdWRlICgkZ2FtZVNhdmVFeHRlbnNpb25zIHwgRm9yRWFjaC1PYmplY3QgeyAiKiRfIiB9KSAtRmlsZSAtUmVjdXJzZSAgICAgICAgIGZvcmVhY2ggKCRmaWxlIGluICRmaWxlcykgeyAgICAgICAgICAgICBta2RpciAiJHN0ZWFtUGF0aFxzdGVhbWFwcHNcY29tbW9uXFN0ZWFtIENvbnRyb2xsZXIgQ29uZmlnc1wkc3RlYW1pZFxjb25maWdcJHN0ZWFtQXBwSURcJCgkZmlsZS5WZXJzaW9uSW5mby5GaWxlTmFtZS5UcmltU3RhcnQoJGdhbWVTYXZlRm9sZGVyKS5UcmltRW5kKCRmaWxlLm5hbWUpKSIgICAgICAgICAgICAgQ29weS1JdGVtICRmaWxlICIkc3RlYW1QYXRoXHN0ZWFtYXBwc1xjb21tb25cU3RlYW0gQ29udHJvbGxlciBDb25maWdzXCRzdGVhbWlkXGNvbmZpZ1wkc3RlYW1BcHBJRFwkKCRmaWxlLlZlcnNpb25JbmZvLkZpbGVOYW1lLlRyaW1TdGFydCgkZ2FtZVNhdmVGb2xkZXIpKS52ZGYiICAgICAgICB9ICAgICB9ICAgICBpZiAoJGdhbWVSZWdpc3RyeUVudHJpZXMgLW5lICRudWxsKSB7ICAgICAgICAgcmVnIGV4cG9ydCAkZ2FtZVJlZ2lzdHJ5RW50cmllcyAiJHN0ZWFtUGF0aFxzdGVhbWFwcHNcY29tbW9uXFN0ZWFtIENvbnRyb2xsZXIgQ29uZmlnc1wkc3RlYW1pZFxjb25maWdcJHN0ZWFtQXBwSURccmVnRW50cmllcy5yZWciICAgICB9ICAgICAiaXNDb25maWd1cmVkIiB8IFNldC1Db250ZW50ICIkc3RlYW1QYXRoXHN0ZWFtYXBwc1xjb21tb25cU3RlYW0gQ29udHJvbGxlciBDb25maWdzXCRzdGVhbWlkXGNvbmZpZ1wkc3RlYW1BcHBJRFxpc0NvbmZpZ3VyZWQudmRmIiB9ICRDbG91ZENvbmZpZyA9IEB7fSAkQ2xvdWRDb25maWcuQWRkKCJnYW1lcGF0aCIsJGdhbWVwYXRoKSAkQ2xvdWRDb25maWcuQWRkKCJzdGVhbXBhdGgiLCRzdGVhbVBhdGgpICRDbG91ZENvbmZpZy5BZGQoInN0ZWFtSUQiLCRzdGVhbWlkKSAkQ2xvdWRDb25maWcuQWRkKCJDbG91ZFN5bmNEb3dubG9hZCIsICRkYXRhYmFzZS51cGRhdGVMaW5rKSAkQ2xvdWRDb25maWcgfCBDb252ZXJ0VG8tSnNvbiAtZGVwdGggMzIgfCBGb3JtYXQtSnNvbiB8IFNldC1Db250ZW50ICIkZW52OmFwcGRhdGFcJGNsb3VkTmFtZVxDbG91ZENvbmZpZy5qc29uIiBTdGFydC1Qcm9jZXNzICIkZW52OmFwcGRhdGFcTWljcm9zb2Z0XFdpbmRvd3NcU3RhcnQgTWVudVxQcm9ncmFtc1xTdGFydHVwXCRnYW1lTmFtZSBTdGVhbSBDbG91ZC5leGUiIGNscyBlY2hvICJTdGVhbSBDbG91ZCBzZXR1cCBoYXMgY29tcGxldGVkLCByZW1lbWJlciB0byBpbnN0YWxsIG9uIG90aGVyIGNvbXB1dGVycyB0byBzeW5jIHNhdmVzIiBlY2hvICJQcmVzcyBhbnkga2V5IHRvIGV4aXQiIHRpbWVvdXQgLTEgfE91dC1OdWxs"
      },
      "isOnline": true
    },
    {
      "name": "Dyson Sphere Program",
      "steamID": "1366540",
      "installer": {
        "Script": ""
      },
      "isOnline": true
    },
    {
      "name": "Get To The Orange Door",
      "steamID": "541200",
      "installer": {
        "Script": ""
      },
      "isOnline": true
    }
  ]
}
