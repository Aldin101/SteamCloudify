{
  "games": [
    {
      "name": "Beat Saber",
      "steamID": "620980",
      "installer": {
        "Script": ""
      }
    },
    {
      "name": "Get To The Orange Door",
      "steamID": "541200",
      "installer": {
        "Script": ""
      }
    }
  ]
}
